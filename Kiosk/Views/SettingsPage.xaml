<Page
    x:Class="IntelligentKioskSample.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:IntelligentKioskSample.Views"
    xmlns:ctl="using:IntelligentKioskSample.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <ctl:StringMatchToVisibilityConverter x:Key="StringMatchToVisibilityConverter"/>
        <ctl:StringContainsToVisibilityConverter x:Key="StringContainsToVisibilityConverter"/>
        <local:DemoIdToDisplayNameConverter x:Key="DemoIdToDisplayNameConverter"/>
        <x:String x:Key="CustomEndpointName">Custom</x:String>
        <x:String x:Key="LocalHost">://localhost</x:String>
        <Style TargetType="Button" x:Key="LocalHostSetupButtonStyle">
            <Style.Setters>
                <Setter Property="Foreground" Value="OrangeRed"/>
                <Setter Property="Margin" Value="0,0,0,-8"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="Content" Value="Click here for extra setup steps&#x0a;when targeting localhost endpoints."/>
                <Setter Property="Flyout">
                    <Setter.Value>
                        <Flyout>
                            <StackPanel Orientation="Vertical" Width="350">
                                <TextBlock Text="In order for the kiosk app to make http requests to another process in the local machine, such as a Docker application running a container, Windows needs to be configured to enable it.&#x0a;&#x0a;Please run the following command from an admin command line prompt in your machine (you can select and copy the text below to the clipboard):" TextWrapping="Wrap"/>
                                <TextBlock IsTextSelectionEnabled="True" FontStyle="Italic" Foreground="OrangeRed" Margin="0,16,0,0" Text="CheckNetIsolation.exe LoopbackExempt -a -n=intelligentkiosksample_csqyw2evbp0ke" TextWrapping="Wrap"/>
                            </StackPanel>
                        </Flyout>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="Settings.Title" TargetType="TextBlock" BasedOn="{StaticResource SubheaderTextBlockStyle}">
            <Setter Property="FontSize" Value="24" />
            <Setter Property="Margin" Value="0,24,0,24" />
        </Style>
        <Style x:Key="Settings.SubTitle" TargetType="TextBlock" BasedOn="{StaticResource SubheaderTextBlockStyle}">
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>
        <Style x:Key="Settings.Comment" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="MaxWidth" Value="490"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style x:Key="Settings.Panel" TargetType="StackPanel">
            <Setter Property="Margin" Value="0,0,0,48" />
        </Style>
        <Style x:Key="Settings.SubPanel" TargetType="StackPanel">
            <Setter Property="Spacing" Value="12" />
            <Setter Property="Margin" Value="0,0,0,24" />
        </Style>
        <Style x:Key="Settings.Panel.Horizontal" TargetType="StackPanel">
            <Setter Property="Spacing" Value="24" />
            <Setter Property="Orientation" Value="Horizontal" />
        </Style>
        <Style x:Key="Settings.Panel.CustomEndPoint" BasedOn="{StaticResource Settings.Panel.Horizontal}" TargetType="StackPanel">
            <Setter Property="Margin" Value="0,-24,0,0" />
        </Style>
        <Style x:Key="Settings.Input" TargetType="FrameworkElement">
            <Setter Property="Width" Value="320" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="0,0,0,24" />
        </Style>
        <Style x:Key="Settings.Line" TargetType="Grid">
            <Setter Property="BorderBrush" Value="#666666"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Opacity" Value=".5"/>
        </Style>
    </Page.Resources>
    
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
          EntranceNavigationTransitionInfo.IsTargetElement="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <CommandBar x:Name="commandBar" DefaultLabelPosition="Right" >
            <AppBarButton Icon="Undo" Label="Reset Settings" Click="OnResetSettingsClick"/>

            <CommandBar.Content>
                <TextBlock Text="Settings" Style="{ThemeResource PageTitleTextBlockStyle}" Margin="14,10,12,0"/>
            </CommandBar.Content>
        </CommandBar>

        <ScrollViewer Grid.Row="1" IsTabStop="True">
            <Grid>
                <TextBlock x:Name="versionTextBlock" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="35"/>

                <StackPanel Margin="12,0,36,12">

                    <!--General-->
                    <TextBlock Text="General" Style="{StaticResource Settings.Title}"/>
                    <StackPanel Style="{StaticResource Settings.Panel}">

                        <!--workspace name-->
                        <StackPanel Style="{StaticResource Settings.Panel.Horizontal}">
                            <TextBox Header="Workspace Name" Text="{Binding WorkspaceKey, Mode=TwoWay}" Style="{StaticResource Settings.Input}" />
                            <Button Content="Generate Name" Click="OnGenerateNewKeyClicked" />
                        </StackPanel>

                        <!--camera source-->
                        <ComboBox x:Name="cameraSourceComboBox" Header="Camera source" Style="{StaticResource Settings.Input}" SelectionChanged="OnCameraSourceSelectionChanged"/>

                        <!--starting page-->
                        <ComboBox Header="Starting page" ItemsSource="{Binding StartingPageNames}" SelectedItem="{Binding StartingPage, Mode=TwoWay}" Style="{StaticResource Settings.Input}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource DemoIdToDisplayNameConverter}}" Margin="0,0,10,0"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <!--Full Screen-->
                        <StackPanel Style="{StaticResource Settings.SubPanel}">
                            <ToggleSwitch IsOn="{Binding StartupFullScreenMode, Mode=TwoWay}" Header="Start in full screen mode"/>
                        </StackPanel>

                        <!--face detection-->
                        <StackPanel Style="{StaticResource Settings.SubPanel}">
                            <TextBlock Text="Face detection" Style="{StaticResource Settings.SubTitle}"/>

                            <StackPanel Spacing="7">
                                <TextBlock Text="Minimum detectable face size (as percentage of image height)" />
                                <StackPanel Orientation="Horizontal" Spacing="12">
                                    <ctl:NumericUpDown Minimum="0" Maximum="100" Value="{Binding MinDetectableFaceCoveragePercentage, Mode=TwoWay}" />
                                    <TextBlock Text="%" VerticalAlignment="Bottom"/>
                                </StackPanel>
                            </StackPanel>

                            <ToggleSwitch Header="Age and gender prediction" IsOn="{Binding ShowAgeAndGender, Mode=TwoWay}">
                                <ToggleSwitch.HeaderTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock Text="Age and gender prediction"/>
                                            <TextBlock Style="{StaticResource Settings.Comment}" Text="Predictions based on face appearance may not match a person's identity.&#x0a;Consider if seeing these estimates is appropriate for your audience."/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ToggleSwitch.HeaderTemplate>
                            </ToggleSwitch>
                        </StackPanel>
                    </StackPanel>

                    <Grid Style="{StaticResource Settings.Line}"/>

                    <!--keys-->
                    <TextBlock Text="Cognitive Services Keys" Style="{StaticResource Settings.Title}"/>
                    <StackPanel Style="{StaticResource Settings.Panel}">

                        <!--face api-->
                        <StackPanel Style="{StaticResource Settings.SubPanel}">
                            <TextBlock Text="Face API" Style="{StaticResource Settings.SubTitle}"/>

                            <StackPanel Style="{StaticResource Settings.Panel.Horizontal}">
                                <PasswordBox Header="Face API Key" Password="{Binding FaceApiKey, Mode=TwoWay}" Style="{StaticResource Settings.Input}"/>
                                <ComboBox Header="Location" x:Name="faceApiEndpointCombobox" ItemsSource="{Binding AvailableApiEndpoints}" SelectedValuePath="Value" DisplayMemberPath="Key" SelectedValue="{Binding BindingFaceApiKeyEndpoint, Mode=TwoWay}"/>
                            </StackPanel>

                            <StackPanel Style="{StaticResource Settings.Panel.CustomEndPoint}" 
                                    Visibility="{Binding ElementName=faceApiEndpointCombobox, Path=SelectedValue, Converter={StaticResource StringMatchToVisibilityConverter}, ConverterParameter={StaticResource CustomEndpointName}}">
                                <TextBox Header="Custom endpoint" x:Name="faceApiEndpointTextBox" Style="{StaticResource Settings.Input}"
                                 PlaceholderText="(e.g. https://virginia.api.cognitive.microsoft.us)" 
                                 Text="{Binding CustomFaceApiEndpoint, Mode=TwoWay}" />
                                <Button Style="{StaticResource LocalHostSetupButtonStyle}" Visibility="{Binding ElementName=faceApiEndpointTextBox, Path=Text, Converter={StaticResource StringContainsToVisibilityConverter}, ConverterParameter={StaticResource LocalHost}}"/>
                            </StackPanel>
                        </StackPanel>

                        <!--custom vision-->
                        <StackPanel Style="{StaticResource Settings.SubPanel}">
                            <TextBlock Text="Custom Vision" Style="{StaticResource Settings.SubTitle}"/>

                            <StackPanel Style="{StaticResource Settings.Panel.Horizontal}">
                                <PasswordBox Header="Custom Vision Training Key" Password="{Binding CustomVisionTrainingApiKey, Mode=TwoWay}" Style="{StaticResource Settings.Input}"  />
                                <ComboBox Header="Location" ItemsSource="{Binding AvailableCustomVisionApiEndpoints}" SelectedValuePath="Value" DisplayMemberPath="Key" 
                                          SelectedValue="{Binding CustomVisionTrainingApiKeyEndpoint, Mode=TwoWay}"/>
                            </StackPanel>

                            <StackPanel Style="{StaticResource Settings.Panel.Horizontal}">
                                <PasswordBox Header="Custom Vision Prediction Key" Password="{Binding CustomVisionPredictionApiKey, Mode=TwoWay}" Style="{StaticResource Settings.Input}" Margin="0,0,0,36"/>
                                <ComboBox Header="Location" ItemsSource="{Binding AvailableCustomVisionApiEndpoints}" SelectedValuePath="Value" DisplayMemberPath="Key" 
                                          SelectedValue="{Binding CustomVisionPredictionApiKeyEndpoint, Mode=TwoWay}"/>
                            </StackPanel>
                        </StackPanel>

                        <!--computer vision-->
                        <StackPanel Style="{StaticResource Settings.SubPanel}">
                            <TextBlock Text="Computer Vision" Style="{StaticResource Settings.SubTitle}"/>

                            <StackPanel Style="{StaticResource Settings.Panel.Horizontal}">
                                <PasswordBox Header="Computer Vision key" Password="{Binding VisionApiKey, Mode=TwoWay}" Style="{StaticResource Settings.Input}" />
                                <ComboBox Header="Location" x:Name="visionApiEndpointCombobox" ItemsSource="{Binding AvailableApiEndpoints}" SelectedValuePath="Value" DisplayMemberPath="Key" SelectedValue="{Binding BindingVisionApiKeyEndpoint, Mode=TwoWay}"/>
                            </StackPanel>

                            <StackPanel Style="{StaticResource Settings.Panel.CustomEndPoint}" 
                                    Visibility="{Binding ElementName=visionApiEndpointCombobox, Path=SelectedValue, Converter={StaticResource StringMatchToVisibilityConverter}, ConverterParameter={StaticResource CustomEndpointName}}">
                                <TextBox Header="Custom endpoint" x:Name="computerVisionApiEndpointTextBox" Style="{StaticResource Settings.Input}"
                                 PlaceholderText="(e.g. https://virginia.api.cognitive.microsoft.us)" 
                                 Text="{Binding CustomComputerVisionApiEndpoint, Mode=TwoWay}" />
                                <Button Style="{StaticResource LocalHostSetupButtonStyle}" Visibility="{Binding ElementName=computerVisionApiEndpointTextBox, Path=Text, Converter={StaticResource StringContainsToVisibilityConverter}, ConverterParameter={StaticResource LocalHost}}"/>
                            </StackPanel>
                        </StackPanel>

                        <!--text analytics-->
                        <StackPanel Style="{StaticResource Settings.SubPanel}">
                            <TextBlock Text="Text Analytics" Style="{StaticResource Settings.SubTitle}"/>
                            <StackPanel Style="{StaticResource Settings.Panel.Horizontal}">
                                <PasswordBox Header="Text Analytics Key" Password="{Binding TextAnalyticsKey, Mode=TwoWay}" Style="{StaticResource Settings.Input}"/>
                                <ComboBox Header="Location" x:Name="textAnalyticsEndpointCombobox" ItemsSource="{Binding AvailableApiEndpoints}" SelectedValuePath="Value" DisplayMemberPath="Key" SelectedValue="{Binding BindingTextAnalyticsApiKeyEndpoint, Mode=TwoWay}"/>
                            </StackPanel>

                            <StackPanel Style="{StaticResource Settings.Panel.CustomEndPoint}"  
                                    Visibility="{Binding ElementName=textAnalyticsEndpointCombobox, Path=SelectedValue, Converter={StaticResource StringMatchToVisibilityConverter}, ConverterParameter={StaticResource CustomEndpointName}}">
                                <TextBox Header="Custom endpoint" x:Name="textAnalyticsApiEndpointTextBox" Style="{StaticResource Settings.Input}"
                                     PlaceholderText="(e.g. https://virginia.api.cognitive.microsoft.us)" 
                                     Text="{Binding CustomTextAnalyticsEndpoint, Mode=TwoWay}" />
                                <Button Style="{StaticResource LocalHostSetupButtonStyle}" Visibility="{Binding ElementName=textAnalyticsApiEndpointTextBox, Path=Text, Converter={StaticResource StringContainsToVisibilityConverter}, ConverterParameter={StaticResource LocalHost}}"/>
                            </StackPanel>
                        </StackPanel>

                        <!-- form recognizer api -->
                        <StackPanel Style="{StaticResource Settings.SubPanel}">
                            <TextBlock Text="Form Recognizer API" Style="{StaticResource Settings.SubTitle}"/>

                            <StackPanel Style="{StaticResource Settings.Panel.Horizontal}">
                                <PasswordBox Header="Form Recognizer API Key" Password="{Binding FormRecognizerApiKey, Mode=TwoWay}" Style="{StaticResource Settings.Input}"/>
                                <ComboBox Header="Location" ItemsSource="{Binding AvailableFormRecognizerApiEndpoints}" SelectedValuePath="Value" DisplayMemberPath="Key" SelectedValue="{Binding FormRecognizerApiKeyEndpoint, Mode=TwoWay}"/>
                            </StackPanel>
                        </StackPanel>

                        <!--bing search-->
                        <StackPanel Style="{StaticResource Settings.SubPanel}" >
                            <TextBlock Text="Bing Search" Style="{StaticResource Settings.SubTitle}"/>
                            <PasswordBox Header="Bing Search API Key" Password="{Binding BingSearchApiKey, Mode=TwoWay}" Style="{StaticResource Settings.Input}" />
                            <PasswordBox Header="Bing Auto Suggestion API Key" Password="{Binding BingAutoSuggestionApiKey, Mode=TwoWay}" Style="{StaticResource Settings.Input}" />
                        </StackPanel>

                        <!--translator text api-->
                        <StackPanel Style="{StaticResource Settings.SubPanel}" >
                            <TextBlock Text="Translator Text" Style="{StaticResource Settings.SubTitle}"/>
                            <PasswordBox Header="Translator Text API Key" Password="{Binding TranslatorTextApiKey, Mode=TwoWay}" Style="{StaticResource Settings.Input}" />
                        </StackPanel>

                        <!--anomaly detector api-->
                        <StackPanel Style="{StaticResource Settings.SubPanel}">
                            <TextBlock Text="Anomaly Detector" Style="{StaticResource Settings.SubTitle}"/>
                            <StackPanel Style="{StaticResource Settings.Panel.Horizontal}">
                                <PasswordBox Header="Anomaly Detector Key" Password="{Binding AnomalyDetectorApiKey, Mode=TwoWay}" Style="{StaticResource Settings.Input}"/>
                                <ComboBox Header="Location" x:Name="anomalyDetectorEndpointCombobox" ItemsSource="{Binding AvailableApiEndpoints}" SelectedValuePath="Value" DisplayMemberPath="Key" SelectedValue="{Binding BindingAnomalyDetectorApiKeyEndpoint, Mode=TwoWay}"/>
                            </StackPanel>

                            <StackPanel Style="{StaticResource Settings.Panel.CustomEndPoint}"  
                                    Visibility="{Binding ElementName=anomalyDetectorEndpointCombobox, Path=SelectedValue, Converter={StaticResource StringMatchToVisibilityConverter}, ConverterParameter={StaticResource CustomEndpointName}}">
                                <TextBox Header="Custom endpoint" x:Name="anomalyDetectorApiEndpointTextBox" Style="{StaticResource Settings.Input}"
                                     PlaceholderText="(e.g. https://virginia.api.cognitive.microsoft.us)" 
                                     Text="{Binding CustomAnomalyDetectorApiEndpoint, Mode=TwoWay}" />
                                <Button Style="{StaticResource LocalHostSetupButtonStyle}" Visibility="{Binding ElementName=anomalyDetectorApiEndpointTextBox, Path=Text, Converter={StaticResource StringContainsToVisibilityConverter}, ConverterParameter={StaticResource LocalHost}}"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Style="{StaticResource Settings.Panel.Horizontal}">
                            <Button VerticalAlignment="Bottom" Content="Click here if you need keys" >
                                <Button.Flyout>
                                    <Flyout>
                                        <StackPanel Width="400">
                                            <TextBlock TextWrapping="Wrap" Text="We recommend getting S0 level keys from your Azure Subscription. Below are some handy deep links for creating the keys depending on your needs. For keys that support multiple regions, make sure to set the corresponding region when entering your keys in the kiosk settings."/>
                                            <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesFace" Content="Face"/>
                                            <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesComputerVision" Content="Computer Vision"/>
                                            <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesTextAnalytics" Content="Text Analytics"/>
                                            <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesCustomVision" Content="Custom Vision"/>
                                            <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesBingSearch-v7" Content="Bing Search"/>
                                            <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesBingAutosuggest-v7" Content="Bing Autosuggest"/>
                                            <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesTextTranslation" Content="Translator Text"/>
                                            <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesAnomalyDetector" Content="Anomaly Detector"/>
                                            <HyperlinkButton NavigateUri="https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesFormRecognizer" Content="Form Recognizer"/>

                                            <TextBlock TextWrapping="WrapWholeWords" Foreground="OrangeRed" Margin="0,10,0,0" Text="Important: The free-tier (F0) keys provided by Azure won't support the load from the real-time demos in the kiosk. For the best experience upgrade to a paid key if using those demos."/>
                                        </StackPanel>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                            <Button Content="Run Key Validation Test">
                                <Button.Flyout>
                                    <Flyout Opened="KeyTestFlyoutOpened">
                                        <StackPanel Width="400">
                                            <TextBlock Text="Couple of notes about the validation tests:"/>
                                            <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Margin="6,0,0,0" Text="- Recently acquired keys might need a few minutes to become valid"/>
                                            <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Margin="6,0,0,0" Text="- If you no longer need a particular service, set its key to empty to remove it from validation"/>
                                            <TextBox x:Name="keyTestResultTextBox" Margin="0,6,0,0" Height="150" AcceptsReturn="True" TextWrapping="Wrap" IsReadOnly="True" />
                                        </StackPanel>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>
                        </StackPanel>
                    </StackPanel>

                    <Grid Style="{StaticResource Settings.Line}"/>

                    <!--Advanced-->
                    <TextBlock Text="Advanced" Style="{StaticResource Settings.Title}"/>
                    <StackPanel Style="{StaticResource Settings.Panel}">
                        <ToggleSwitch IsOn="{Binding ShowDebugInfo, Mode=TwoWay}" Header="Show debug info"/>
                    </StackPanel>

                </StackPanel>
            </Grid>
        </ScrollViewer>

    </Grid>
</Page>
